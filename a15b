# print file size and name

ls -lR $* | awk '

BEGIN {
	#print "BYTES", "\t\t\t", "#FILES", "\t\t\t", "DIRECTORY"
	printf "%-20s %-20s %-20s\n", "BYTES", "#FILES", "DIRECTORY"
	counter4dir=-1 # Not necessary but setting value so array starts at 0
	couter4output=-1
	numberFilesEachDirectory=0
	bytesSum=0
	
	# Declare aray with units
	split("0 1 1024 104857.6", arrayUnits )
	
	# Declare aray with units labels
	split("bytesZERO bytes Gib Ti", arrayLabels )

	unitsLength = countArrayElements(arrayUnits)

}




{
	
	if ( $1 ~ /^\..*:$/ ) {
		counter4dir++
		#print "THIS : ", $1 
		arrayDirectoryNames[counter4dir]= $1
		#print "counter4dir : ", counter4dir
		# Resetting the value of bytesSum for each directory
		bytesSum = 0
		numberFilesEachDirectory=0
	}
	
	if ( $1 ~ /^-/ ) {
		bytesSum += $5
		arrayFileSizes[counter4dir]= bytesSum
		#print "bytesSum : ", arrayFileSizes[counter4dir]
		numberFilesEachDirectory++
		arrayNumFiles[counter4dir]= numberFilesEachDirectory
		#print "numberFilesEachDirectory :", numberFilesEachDirectory
	}
}


# This fucntion counts the number of element in an array
function countArrayElements(myArray){
	for ( e in myArray) {
		c++
	}
	return c
}
	

# Function convert bytes to other formats

function convertBytes (convertMe, baseUnit, arrayUnitsII, unitsLengthII, arrayLabelsII ) {
	
	whatUnit=convertMe / baseUnit
	
	#return whatUnit
	#print "whatUnit :", whatUnit
	
	#print arrayUnitsII[1]
	
	for ( counter = 1; counter < unitsLengthII; counter++ ) {
		#print arrayUnitsII[counter], arrayUnitsII[counter+1]
		
		if ( whatUnit >= arrayUnitsII[counter] && arrayUnitsII[counter+1] ){
			print arrayLabelsII[counter]
		}
	}
	
	
	if ( whatUnit >= 1 && whatUnit < 1024  )
		#return whatUnit " Gib"
		print "whatUnit :", whatUnit
		#return  sprintf( "%.2f" , whatUnit) " Gib"
	else if ( whatUnit >= 1024 && whatUnit < 104857.6 )
		print "whatUnit :", whatUnit
		#return sprintf( "%.2f" (whatUnit/1000) ) " Ti"
	else 
		#return convertMe " bytes"
		print convertMe " bytes"
	
}

	
END {


	#print "TOTAl : ", sum, "bytes (" filenum " files)"
	for ( i in arrayDirectoryNames ){
		couter4output++
		#print arrayFileSizes[couter4output], "\t\t\t", arrayNumFiles[couter4output], "\t\t\t", arrayDirectoryNames[couter4output]
		#printf "%-20d %-20d %-20s\n", arrayFileSizes[couter4output], arrayNumFiles[couter4output], arrayDirectoryNames[couter4output]
		#printf "%-20s %-20d %-20s\n",  convertBytes( arrayFileSizes[couter4output], 1048576), arrayNumFiles[couter4output], arrayDirectoryNames[couter4output]
		#convertBytes( arrayFileSizes[couter4output], 1048576)
	}
	
	
	
	#convertBytes(1877218324, 1048576, arrayUnits, unitsLength, arrayLabels )
	convertBytes(18324, 1048576, arrayUnits, unitsLength, arrayLabels )
	
	#print convertBytes(1877218324, 1048576)
	#print convertBytes(8204128, 1048576)
	#print convertBytes(20, 20)
	
	#printf "%-10s \n", arrayFileSizes[1]
	
	#print "Length : ", countArrayElements(arrayFileSizes)
	#print "TEST :", arrayFileSizes[2]
	
	#print arrayUnits[1]
	#print arrayUnits[2]
	#print arrayUnits[3]

}
'